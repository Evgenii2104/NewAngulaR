{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nfunction AppComponent_li_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\", 3);\n    i0.ɵɵelement(1, \"b\");\n    i0.ɵɵelementEnd();\n  }\n}\nclass AppComponent {\n  constructor() {\n    this.cars = [{\n      name: 'Ford'\n    }, {\n      name: 'Mazda'\n    }, {\n      name: 'Bently'\n    }, {\n      name: 'Audi'\n    }, {\n      name: 'Mercedes'\n    }, {\n      name: 'BMW'\n    }];\n  }\n}\nAppComponent.ɵfac = function AppComponent_Factory(t) {\n  return new (t || AppComponent)();\n};\nAppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AppComponent,\n  selectors: [[\"app-root\"]],\n  decls: 3,\n  vars: 1,\n  consts: [[1, \"col-xs-8\", \"col-xs-offset-2\"], [1, \"list-group\"], [\"class\", \"list-group-item\", 4, \"ngFor\", \"ngForOf\"], [1, \"list-group-item\"]],\n  template: function AppComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"ul\", 1);\n      i0.ɵɵtemplate(2, AppComponent_li_2_Template, 2, 0, \"li\", 2);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngForOf\", ctx.cars);\n    }\n  },\n  dependencies: [i1.NgForOf],\n  encapsulation: 2\n});\nexport { AppComponent };","map":{"version":3,"names":["AppComponent","constructor","cars","name","selectors","decls","vars","consts","template","AppComponent_Template","rf","ctx"],"sources":["C:\\Users\\user\\Desktop\\тур\\задание 1\\Новая папка (2)\\основы java\\NewAngulaR\\ng-course\\src\\app\\app.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  template: '<div class=\"col-xs-8 col-xs-offset-2\">' +\n    '<ul class=\"list-group\">' +\n      '<li class=\"list-group-item\" *ngFor=\"let car of cars; let i = index\">' +\n    '<b></b>' +\n      '</li>' +\n    '</ul>' +\n    '</div> '\n  //styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  cars = [\n    {name: 'Ford'},\n    {name: 'Mazda'},\n    {name: 'Bently'},\n    {name: 'Audi'},\n    {name: 'Mercedes'},\n    {name: 'BMW'}\n  ]\n}\n"],"mappings":";;;;;;;;;AAEA,MAWaA,YAAY;EAXzBC,YAAA;IAYE,KAAAC,IAAI,GAAG,CACL;MAACC,IAAI,EAAE;IAAM,CAAC,EACd;MAACA,IAAI,EAAE;IAAO,CAAC,EACf;MAACA,IAAI,EAAE;IAAQ,CAAC,EAChB;MAACA,IAAI,EAAE;IAAM,CAAC,EACd;MAACA,IAAI,EAAE;IAAU,CAAC,EAClB;MAACA,IAAI,EAAE;IAAK,CAAC,CACd;;;AARUH,YAAY,C;mBAAZA,YAAY;AAAA;AAAZA,YAAY,C;QAAZA,YAAY;EAAAI,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,sBAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;;;;;;;;;;;;;SAAZV,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}