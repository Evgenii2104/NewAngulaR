{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./cars.servise\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nconst _c0 = function (a0) {\n  return {\n    background: a0\n  };\n};\nfunction AppComponent_li_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\", 6)(1, \"span\", 7);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const car_r1 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngStyle\", i0.ɵɵpureFunction1(3, _c0, car_r1.color));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(car_r1.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"\", car_r1.name, \" \");\n  }\n}\n;\nclass AppComponent {\n  constructor(carsService) {\n    this.carsService = carsService;\n    this.cars = [];\n    this.carName = '';\n  }\n  loadCars() {\n    this.carsService.getCars().subscribe(cars => {\n      console.log(cars);\n      // @ts-ignore\n      this.cars = cars;\n    });\n  }\n  addCar() {\n    // @ts-ignore\n    this.carsService.addCar(this.carName).subscribe(car => {\n      this.cars.push(car);\n    });\n    this.carName = '';\n  }\n}\nAppComponent.ɵfac = function AppComponent_Factory(t) {\n  return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.CarsServise));\n};\nAppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AppComponent,\n  selectors: [[\"app-root\"]],\n  decls: 10,\n  vars: 2,\n  consts: [[1, \"col-xs-8\", \"col-xs-offset-2\"], [\"type\", \"text\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [1, \"btn\", \"btn-primary\", 3, \"click\"], [1, \"btn\", \"btn-success\", 3, \"click\"], [1, \"list-group\"], [\"class\", \"list-group-item\", 4, \"ngFor\", \"ngForOf\"], [1, \"list-group-item\"], [1, \"badge\", 3, \"ngStyle\"]],\n  template: function AppComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"input\", 1);\n      i0.ɵɵlistener(\"ngModelChange\", function AppComponent_Template_input_ngModelChange_1_listener($event) {\n        return ctx.carName = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(2, \"hr\");\n      i0.ɵɵelementStart(3, \"button\", 2);\n      i0.ɵɵlistener(\"click\", function AppComponent_Template_button_click_3_listener() {\n        return ctx.loadCars();\n      });\n      i0.ɵɵtext(4, \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u0438\\u0442\\u044C\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"button\", 3);\n      i0.ɵɵlistener(\"click\", function AppComponent_Template_button_click_5_listener() {\n        return ctx.addCar();\n      });\n      i0.ɵɵtext(6, \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u043C\\u0430\\u0448\\u0438\\u043D\\u0443\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(7, \"hr\");\n      i0.ɵɵelementStart(8, \"ul\", 4);\n      i0.ɵɵtemplate(9, AppComponent_li_9_Template, 4, 5, \"li\", 5);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngModel\", ctx.carName);\n      i0.ɵɵadvance(8);\n      i0.ɵɵproperty(\"ngForOf\", ctx.cars);\n    }\n  },\n  dependencies: [i2.NgForOf, i2.NgStyle, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgModel],\n  styles: [\".white-text[_ngcontent-%COMP%] {\\r\\n  color: green;\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxZQUFZO0FBQ2QiLCJzb3VyY2VzQ29udGVudCI6WyIud2hpdGUtdGV4dCB7XHJcbiAgY29sb3I6IGdyZWVuO1xyXG59XHJcbiJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});\nexport { AppComponent };","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵproperty","ɵɵpureFunction1","_c0","car_r1","color","ɵɵtextInterpolate","id","ɵɵtextInterpolate1","name","AppComponent","constructor","carsService","cars","carName","loadCars","getCars","subscribe","console","log","addCar","car","push","ɵɵdirectiveInject","i1","CarsServise","selectors","decls","vars","consts","template","AppComponent_Template","rf","ctx","ɵɵlistener","AppComponent_Template_input_ngModelChange_1_listener","$event","ɵɵelement","AppComponent_Template_button_click_3_listener","AppComponent_Template_button_click_5_listener","ɵɵtemplate","AppComponent_li_9_Template"],"sources":["C:\\Users\\user\\Desktop\\тур\\задание 1\\Новая папка (2)\\основы java\\NewAngulaR\\ng-course\\src\\app\\app.component.ts","C:\\Users\\user\\Desktop\\тур\\задание 1\\Новая папка (2)\\основы java\\NewAngulaR\\ng-course\\src\\app\\app.component.html"],"sourcesContent":["import {Component} from '@angular/core';\nimport {CarsServise} from \"./cars.servise\";\n\ninterface Cars {\n  name: string;\n  color: string;\n  id: number;\n};\n\n@Component({\n  selector: 'app-root',\n  templateUrl: `app.component.html`,\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\n  cars: Cars[] = [];\n  carName: string = '';\n\n  constructor(private carsService: CarsServise) { }\n\n\n  loadCars() {\n    this.carsService\n      .getCars()\n      .subscribe((cars ) => {\n         console.log(cars)\n         // @ts-ignore\n        this.cars = cars\n       })\n  }\n\n  addCar() {\n\n    // @ts-ignore\n    this.carsService.addCar(this.carName).subscribe((car: Cars) => {\n      this.cars.push(car)\n    });\n    this.carName = ''\n  }\n}\n","<div class=\"col-xs-8 col-xs-offset-2\">\n  <input type=\"text\" class=\"form-control\" [(ngModel)]=\"carName\">\n  <hr>\n  <button class=\"btn btn-primary\" (click)=\"loadCars()\">Загрузить</button>\n  <button class=\"btn btn-success\" (click)=\"addCar()\">Добавить машину</button>\n  <hr>\n  <ul class=\"list-group\">\n    <li class=\"list-group-item\" *ngFor=\"let car of cars\">\n      <span class=\"badge\" [ngStyle]=\"{background: car.color}\">{{car.id}}</span>{{car.name}}\n    </li>\n  </ul>\n</div>\n\n\n\n"],"mappings":";;;;;;;;;;;ICOIA,EAAA,CAAAC,cAAA,YAAqD;IACKD,EAAA,CAAAE,MAAA,GAAU;IAAAF,EAAA,CAAAG,YAAA,EAAO;IAAAH,EAAA,CAAAE,MAAA,GAC3E;IAAAF,EAAA,CAAAG,YAAA,EAAK;;;;IADiBH,EAAA,CAAAI,SAAA,GAAmC;IAAnCJ,EAAA,CAAAK,UAAA,YAAAL,EAAA,CAAAM,eAAA,IAAAC,GAAA,EAAAC,MAAA,CAAAC,KAAA,EAAmC;IAACT,EAAA,CAAAI,SAAA,GAAU;IAAVJ,EAAA,CAAAU,iBAAA,CAAAF,MAAA,CAAAG,EAAA,CAAU;IAAOX,EAAA,CAAAI,SAAA,GAC3E;IAD2EJ,EAAA,CAAAY,kBAAA,KAAAJ,MAAA,CAAAK,IAAA,MAC3E;;;ADFH;AAED,MAKaC,YAAY;EAKvBC,YAAoBC,WAAwB;IAAxB,KAAAA,WAAW,GAAXA,WAAW;IAH/B,KAAAC,IAAI,GAAW,EAAE;IACjB,KAAAC,OAAO,GAAW,EAAE;EAE4B;EAGhDC,QAAQA,CAAA;IACN,IAAI,CAACH,WAAW,CACbI,OAAO,EAAE,CACTC,SAAS,CAAEJ,IAAI,IAAK;MAClBK,OAAO,CAACC,GAAG,CAACN,IAAI,CAAC;MACjB;MACD,IAAI,CAACA,IAAI,GAAGA,IAAI;IACjB,CAAC,CAAC;EACP;EAEAO,MAAMA,CAAA;IAEJ;IACA,IAAI,CAACR,WAAW,CAACQ,MAAM,CAAC,IAAI,CAACN,OAAO,CAAC,CAACG,SAAS,CAAEI,GAAS,IAAI;MAC5D,IAAI,CAACR,IAAI,CAACS,IAAI,CAACD,GAAG,CAAC;IACrB,CAAC,CAAC;IACF,IAAI,CAACP,OAAO,GAAG,EAAE;EACnB;;AAzBWJ,YAAY,C;mBAAZA,YAAY,EAAAd,EAAA,CAAA2B,iBAAA,CAAAC,EAAA,CAAAC,WAAA;AAAA;AAAZf,YAAY,C;QAAZA,YAAY;EAAAgB,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,sBAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCdzBpC,EAAA,CAAAC,cAAA,aAAsC;MACID,EAAA,CAAAsC,UAAA,2BAAAC,qDAAAC,MAAA;QAAA,OAAAH,GAAA,CAAAnB,OAAA,GAAAsB,MAAA;MAAA,EAAqB;MAA7DxC,EAAA,CAAAG,YAAA,EAA8D;MAC9DH,EAAA,CAAAyC,SAAA,SAAI;MACJzC,EAAA,CAAAC,cAAA,gBAAqD;MAArBD,EAAA,CAAAsC,UAAA,mBAAAI,8CAAA;QAAA,OAASL,GAAA,CAAAlB,QAAA,EAAU;MAAA,EAAC;MAACnB,EAAA,CAAAE,MAAA,6DAAS;MAAAF,EAAA,CAAAG,YAAA,EAAS;MACvEH,EAAA,CAAAC,cAAA,gBAAmD;MAAnBD,EAAA,CAAAsC,UAAA,mBAAAK,8CAAA;QAAA,OAASN,GAAA,CAAAb,MAAA,EAAQ;MAAA,EAAC;MAACxB,EAAA,CAAAE,MAAA,4FAAe;MAAAF,EAAA,CAAAG,YAAA,EAAS;MAC3EH,EAAA,CAAAyC,SAAA,SAAI;MACJzC,EAAA,CAAAC,cAAA,YAAuB;MACrBD,EAAA,CAAA4C,UAAA,IAAAC,0BAAA,gBAEK;MACP7C,EAAA,CAAAG,YAAA,EAAK;;;MATmCH,EAAA,CAAAI,SAAA,GAAqB;MAArBJ,EAAA,CAAAK,UAAA,YAAAgC,GAAA,CAAAnB,OAAA,CAAqB;MAMflB,EAAA,CAAAI,SAAA,GAAO;MAAPJ,EAAA,CAAAK,UAAA,YAAAgC,GAAA,CAAApB,IAAA,CAAO;;;;;;SDO1CH,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}