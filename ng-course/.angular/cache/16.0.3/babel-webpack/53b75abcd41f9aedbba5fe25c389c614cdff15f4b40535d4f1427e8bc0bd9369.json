{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./auth.service\";\nclass AuthGuard {\n  constructor(auth) {\n    this.auth = auth;\n  }\n  CanActivate(route, state) {}\n}\nAuthGuard.ɵfac = function AuthGuard_Factory(t) {\n  return new (t || AuthGuard)(i0.ɵɵinject(i1.AuthService));\n};\nAuthGuard.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthGuard,\n  factory: AuthGuard.ɵfac\n});\nexport { AuthGuard };","map":{"version":3,"names":["AuthGuard","constructor","auth","CanActivate","route","state","i0","ɵɵinject","i1","AuthService","factory","ɵfac"],"sources":["C:\\Users\\user\\Desktop\\тур\\задание 1\\Новая папка (2)\\основы java\\NewAngulaR\\ng-course\\src\\app\\auth-guard.service.ts"],"sourcesContent":["import {ActivatedRouteSnapshot, CanActivate, RouterStateSnapshot} from \"@angular/router\";\r\nimport {Observable} from \"rxjs\";\r\nimport {AuthService} from \"./auth.service\";\r\nimport {inject, Injectable} from \"@angular/core\";\r\n\r\n@Injectable()\r\n\r\nexport class AuthGuard implements CanActivate{\r\n  constructor(private auth: AuthService) {\r\n  }\r\n  CanActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\r\n\r\n  }\r\n\r\n}\r\n"],"mappings":";;AAKA,MAEaA,SAAS;EACpBC,YAAoBC,IAAiB;IAAjB,KAAAA,IAAI,GAAJA,IAAI;EACxB;EACAC,WAAWA,CAACC,KAA6B,EAAEC,KAA0B,GAErE;;AALWL,SAAS,C;mBAATA,SAAS,EAAAM,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,WAAA;AAAA;AAATT,SAAS,C;SAATA,SAAS;EAAAU,OAAA,EAATV,SAAS,CAAAW;AAAA;SAATX,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}