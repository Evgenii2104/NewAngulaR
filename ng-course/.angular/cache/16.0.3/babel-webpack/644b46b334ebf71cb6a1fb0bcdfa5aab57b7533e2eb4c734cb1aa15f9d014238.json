{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./auth.service\";\nclass AuthGuard {\n  constructor(auth) {\n    this.auth = auth;\n  }\n  canActivate(route, state) {\n    return this.auth.isAuth().then(isLoggedIn => {\n      if (isLoggedIn) {\n        return true;\n      } else {\n        return false;\n      }\n    });\n  }\n}\nAuthGuard.ɵfac = function AuthGuard_Factory(t) {\n  return new (t || AuthGuard)(i0.ɵɵinject(i1.AuthService));\n};\nAuthGuard.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthGuard,\n  factory: AuthGuard.ɵfac\n});\nexport { AuthGuard };","map":{"version":3,"names":["AuthGuard","constructor","auth","canActivate","route","state","isAuth","then","isLoggedIn","i0","ɵɵinject","i1","AuthService","factory","ɵfac"],"sources":["C:\\Users\\user\\Desktop\\тур\\задание 1\\Новая папка (2)\\основы java\\NewAngulaR\\ng-course\\src\\app\\auth-guard.service.ts"],"sourcesContent":["import {ActivatedRouteSnapshot, CanActivate, RouterStateSnapshot, UrlTree} from \"@angular/router\";\r\nimport {Observable} from \"rxjs\";\r\nimport {AuthService} from \"./auth.service\";\r\nimport {inject, Injectable} from \"@angular/core\";\r\n\r\n@Injectable()\r\n\r\nexport class AuthGuard implements CanActivate{\r\n  constructor(private auth: AuthService) {\r\n  }\r\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\r\n  \r\n    return  this.auth.isAuth().then((isLoggedIn: boolean) => {\r\n      if (isLoggedIn) {\r\n        return true\r\n      } else {\r\n        return false\r\n      }\r\n    })\r\n  }\r\n\r\n\r\n\r\n}\r\n"],"mappings":";;AAKA,MAEaA,SAAS;EACpBC,YAAoBC,IAAiB;IAAjB,KAAAA,IAAI,GAAJA,IAAI;EACxB;EACAC,WAAWA,CAACC,KAA6B,EAAEC,KAA0B;IAEnE,OAAQ,IAAI,CAACH,IAAI,CAACI,MAAM,EAAE,CAACC,IAAI,CAAEC,UAAmB,IAAI;MACtD,IAAIA,UAAU,EAAE;QACd,OAAO,IAAI;OACZ,MAAM;QACL,OAAO,KAAK;;IAEhB,CAAC,CAAC;EACJ;;AAZWR,SAAS,C;mBAATA,SAAS,EAAAS,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,WAAA;AAAA;AAATZ,SAAS,C;SAATA,SAAS;EAAAa,OAAA,EAATb,SAAS,CAAAc;AAAA;SAATd,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}